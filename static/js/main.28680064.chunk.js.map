{"version":3,"sources":["Helpers/contexts.js","components/Menu.js","Helpers/Questions.js","components/Quiz.js","components/endScreen.js","App.js","index.js"],"names":["GameStateContext","createContext","Menu","useContext","setGameState","setUserName","className","type","placeholder","onChange","event","target","value","onClick","Questions","prompt","optionA","optionB","optionC","optionD","answer","Quiz","useState","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","score","setScore","length","EndScreen","userName","App","gameState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAEaA,G,KAAmBC,wBAAc,KCc/BC,MAZf,WAAiB,IAAD,EACuBC,qBAAWH,GAAxCI,EADM,EACNA,aAAcC,EADR,EACQA,YAEtB,OAAO,sBAAKC,UAAU,OAAf,UACL,qDACA,uBAAOC,KAAK,OAAOC,YAAY,UAAUC,SAAU,SAACC,GAClDL,EAAYK,EAAMC,OAAOC,UAE7B,wBAAQC,QAAS,WAAOT,EAAa,YAArC,4BCVWU,EAAY,CAAE,CACzBC,OAAQ,qBACRC,QAAS,OACTC,QAAS,SACTC,QAAS,QACTC,QAAS,QACTC,OAAQ,WAEV,CACEL,OAAQ,sDACRC,QAAS,2BACTC,QAAS,uCACTC,QAAS,KACTC,QAAS,mCACTC,OAAQ,YC0BKC,MApCf,WAAiB,IAAD,EACgCC,mBAAS,GADzC,mBACPC,EADO,KACUC,EADV,OAE4BF,mBAAS,IAFrC,mBAEPG,EAFO,KAEQC,EAFR,OAG0BvB,qBAAWH,GAA5C2B,EAHO,EAGPA,MAAOC,EAHA,EAGAA,SAAUxB,EAHV,EAGUA,aAgBxB,OAAO,sBAAKE,UAAU,OAAf,UACL,6BAAKQ,EAAUS,GAAiBR,SAChC,sBAAKT,UAAU,YAAf,UACE,wBAAQA,UAAU,YAAYO,QAAU,SAACH,GAAD,OAAWgB,EAAiB,YAApE,SAAiFZ,EAAUS,GAAiBP,UAC5G,wBAAQV,UAAU,YAAYO,QAAU,SAACH,GAAD,OAAWgB,EAAiB,YAApE,SAAiFZ,EAAUS,GAAiBN,UAC5G,wBAAQX,UAAU,YAAaO,QAAU,SAACH,GAAD,OAAWgB,EAAiB,YAArE,SAAkFZ,EAAUS,GAAiBL,UAC7G,wBAAQZ,UAAU,YAAaO,QAAU,SAACH,GAAD,OAAWgB,EAAiB,YAArE,SAAkFZ,EAAUS,GAAiBJ,aAE9GI,IAAoBT,EAAUe,OAAQ,EACrC,wBAAQvB,UAAU,UAAUO,QAhBf,WACbC,EAAUS,GAAiBH,SAAWK,GACxCG,EAASD,EAAO,GAElBvB,EAAa,aAYT,oBACA,wBAAQE,UAAU,UAAUO,QAxBX,WACTC,EAAUS,GAAiBH,SAAWK,GACxCG,EAASD,EAAO,GAEvBH,EAAmBD,EAAkB,IAoBpC,yBCXSO,EAlBG,WAElB,IAFwB,EAO4B3B,qBAAWH,GAAtD2B,EAPe,EAOfA,MAAOC,EAPQ,EAORA,SAAUxB,EAPF,EAOEA,aAAc2B,EAPhB,EAOgBA,SACtC,OAAO,sBAAKzB,UAAU,YAAf,UACW,2CAAcyB,EAAd,qBACA,uBACA,sBAAMzB,UAAU,QAAhB,SAAwB,8CAAiBqB,EAAjB,SACxB,8BACA,wBAAQd,QAAU,WAVpCT,EAAa,WACbwB,EAAS,IASS,gCCKLI,MAjBf,WAAgB,IAAD,EACqBV,mBAAS,QAD9B,mBACNW,EADM,KACK7B,EADL,OAEmBkB,mBAAS,IAF5B,mBAENS,EAFM,KAEI1B,EAFJ,OAGaiB,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAIb,OAAS,sBAAKtB,UAAU,MAAf,UACP,0CACA,eAACN,EAAiBkC,SAAlB,CAA2BtB,MAAO,CAACqB,YAAW7B,eAAc2B,WAAU1B,cAAasB,QAAOC,YAA1F,UACe,SAAdK,GAAwB,cAAC,EAAD,IACV,YAAdA,GAA2B,cAAC,EAAD,IACb,aAAdA,GAA4B,cAAC,EAAD,WCVjCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.28680064.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const GameStateContext = createContext(\"\")\r\n","import \"../App.css\"\r\nimport {useContext} from 'react'\r\nimport {GameStateContext} from '../Helpers/contexts'\r\n\r\nfunction Menu() {\r\n  const { setGameState, setUserName} = useContext(GameStateContext)\r\n\r\n  return <div className='Menu'>\r\n    <label>Enter Your Name:</label>\r\n    <input type=\"text\" placeholder='Name...' onChange={(event) => {\r\n      setUserName(event.target.value)\r\n    }}/>\r\n  <button onClick={() => {setGameState('playing')}}  >Start Quiz</button>\r\n  </div>\r\n}\r\n\r\nexport default Menu","\r\n\r\nexport const Questions = [ {\r\n  prompt: \"What is your name?\",\r\n  optionA: \"Bill\",\r\n  optionB: \"Janice\",\r\n  optionC: \"Clark\",\r\n  optionD: \"Ayden\",\r\n  answer: \"optionC\"\r\n}, \r\n{\r\n  prompt: \"What is the average airspeed velocity of a swallow?\",\r\n  optionA: \"Depends on the porn star\",\r\n  optionB: \"Depends on the weight of the coconut\",\r\n  optionC: \"42\",\r\n  optionD: \"You missed the word \\'unlaidened\\'\",\r\n  answer: \"optionC\"\r\n}]\r\n\r\n","import '../App.css'\r\nimport { Questions } from '../Helpers/Questions'\r\nimport { useState  } from 'react'\r\nimport {useContext} from 'react'\r\nimport {GameStateContext} from '../Helpers/contexts'\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0)\r\n  const [currentAnswer, setCurrentAnswer] = useState('')\r\n  const {score, setScore, setGameState} = useContext(GameStateContext)\r\n\r\n  const nextQuestion = () => {\r\n          if (Questions[currentQuestion].answer === currentAnswer) {\r\n            setScore(score +1)\r\n          }\r\n     setCurrentQuestion(currentQuestion + 1)\r\n}\r\n\r\nconst finishQuiz = () => {\r\n  if (Questions[currentQuestion].answer === currentAnswer) {\r\n    setScore(score +1)\r\n  }\r\n  setGameState('finished')\r\n}\r\n\r\n  return <div className='Quiz'>\r\n    <h1>{Questions[currentQuestion].prompt}</h1>\r\n    <div className=\"Questions\">\r\n      <button className=\"answerBtn\" onClick={ (event) => setCurrentAnswer('optionA')}>{Questions[currentQuestion].optionA}</button>\r\n      <button className=\"answerBtn\" onClick={ (event) => setCurrentAnswer('optionB')}>{Questions[currentQuestion].optionB}</button>\r\n      <button className=\"answerBtn\"  onClick={ (event) => setCurrentAnswer('optionC')}>{Questions[currentQuestion].optionC}</button>\r\n      <button className=\"answerBtn\"  onClick={ (event) => setCurrentAnswer('optionD')}>{Questions[currentQuestion].optionD}</button>\r\n    </div>\r\n    {currentQuestion === Questions.length -1 ? \r\n     (<button className=\"nextBtn\" onClick= {finishQuiz}>Finish</button>)  :\r\n     (<button className=\"nextBtn\" onClick= {nextQuestion}>Next -></button>)\r\n    }\r\n </div>\r\n\r\n  \r\n}\r\n\r\nexport default Quiz\r\n","import React from 'react'\r\nimport {useContext} from 'react'\r\nimport {GameStateContext} from '../Helpers/contexts'\r\nimport '../App.css'\r\n\r\n\r\nconst EndScreen = () => {\r\n\r\nconst reStart = () => {\r\n  setGameState('playing')\r\n  setScore(0)\r\n}\r\n\r\n  const {score, setScore, setGameState, userName} = useContext(GameStateContext)\r\n  return <div className=\"endScreen\">\r\n                    <h3>Congrats {userName}, you are done!</h3>\r\n                    <hr />\r\n                    <span className=\"score\"><h2>Your Score: {score} </h2></span>\r\n                    <div>\r\n                    <button onClick={ () => {reStart()} }>Restart Quiz</button>\r\n                    </div>\r\n            </div>\r\n}\r\n\r\nexport default EndScreen","import {  useState } from 'react'\nimport './App.css'\nimport Menu from './components/Menu'\nimport {GameStateContext} from './Helpers/contexts'\nimport Quiz from './components/Quiz'\nimport EndScreen from './components/endScreen'\n\nfunction App() {\n  const [gameState, setGameState] = useState('Menu')\n  const [userName, setUserName] = useState('')\n  const [score, setScore] = useState(0)\n  return ( <div className=\"App\">\n    <h1>Quiz App</h1>\n    <GameStateContext.Provider value={{gameState, setGameState, userName, setUserName, score, setScore}}>\n    {gameState === 'Menu' && <Menu />}\n    {gameState === 'playing' && <Quiz />}\n    {gameState === 'finished' && <EndScreen />}\n\n    </GameStateContext.Provider>\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}